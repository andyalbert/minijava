<EOL>: 
<CLASS>: class
<ID>: f
<LEFT_CURLY_B>: {
<EOL>: 
<PUBLIC>: public
<STATIC>: static
<VOID>: void
<MAIN>: main
<LEFT_ROUND_B>: (
<STRING>: String
<LEFT_SQUARE_B>: [
<RIGHT_SQUARE_B>: ]
<ID>: args
<RIGHT_ROUND_B>: )
<LEFT_CURLY_B>: {
<EOL>: 
<SYSTEM.OUT.PRINTLN>: System.out.println
<LEFT_ROUND_B>: (
<ID>: thisIsIt
<RIGHT_ROUND_B>: )
<SEMICOLON>: ;
<EOL>: 
<RIGHT_CURLY_B>: }
<EOL>: 
<RIGHT_CURLY_B>: }
<EOL>: 
<EOL>: 
<CLASS>: class
<ID>: a
<LEFT_CURLY_B>: {
<EOL>: 
<INT>: int
<ID>: a
<SEMICOLON>: ;
<EOL>: 
<FLOAT>: float
<ID>: c
<SEMICOLON>: ;
<EOL>: 
<CHARACTER>: char
<ID>: f
<SEMICOLON>: ;
<EOL>: 
<ID>: private
<INT>: int
<ID>: x
<LEFT_ROUND_B>: (
<RIGHT_ROUND_B>: )
<LEFT_CURLY_B>: {
<EOL>: 
<INT>: int
<ID>: y
<SEMICOLON>: ;
<EOL>: 
<WHILE>: while
<LEFT_ROUND_B>: (
<ID>: y
<LESSTHAN>: <
<INTEGRAL_LITERAL>: 9
<RIGHT_ROUND_B>: )
<EOL>: 
<ID>: y
<EQUAL>: =
<INTEGRAL_LITERAL>: 9
<SEMICOLON>: ;
<EOL>: 
<ID>: h
<EQUAL>: =
<ID>: h
<LESSTHAN>: <
<ID>: y
<SEMICOLON>: ;
<EOL>: 
<RETURN>: return
<ID>: h
<SEMICOLON>: ;
<EOL>: 
<RIGHT_CURLY_B>: }
<EOL>: 
<RIGHT_CURLY_B>: }
<EOL>: 
